
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples\feature_selection\SeqFS.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_feature_selection_SeqFS.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_feature_selection_SeqFS.py:


Selective inference for Sequential Feature Selection
====================================================

.. GENERATED FROM PYTHON SOURCE LINES 5-15

.. code-block:: Python


    # Author: Duong Tan Loc

    from pythonsi import Pipeline
    from pythonsi.feature_selection import SequentialFeatureSelection
    from pythonsi import Data
    from pythonsi.test_statistics import FSTestStatistic
    import numpy as np
    import matplotlib.pyplot as plt








.. GENERATED FROM PYTHON SOURCE LINES 16-18

Define the pipeline
-------------------

.. GENERATED FROM PYTHON SOURCE LINES 18-33

.. code-block:: Python



    def SeqFS(k, sigma=None) -> Pipeline:
        x = Data()
        y = Data()

        seqfs = SequentialFeatureSelection(
            n_features_to_select=k, direction="forward", criterion=None
        )
        active_set = seqfs.run(x, y, sigma)
        return Pipeline(
            inputs=(x, y), output=active_set, test_statistic=FSTestStatistic(x=x, y=y)
        )









.. GENERATED FROM PYTHON SOURCE LINES 34-36

Generate data
--------------

.. GENERATED FROM PYTHON SOURCE LINES 36-52

.. code-block:: Python



    def gen_data(n, p, true_beta):
        x = np.random.normal(loc=0, scale=1, size=(n, p))
        true_beta = true_beta.reshape(-1, 1)

        mu = x.dot(true_beta)
        Sigma = np.identity(n)
        Y = mu + np.random.normal(loc=0, scale=1, size=(n, 1))
        return x, Y, Sigma


    x, y, sigma = gen_data(150, 5, np.asarray([0, 0, 0, 0, 0]))
    k = 2
    my_pipeline2 = SeqFS(k, sigma=sigma)








.. GENERATED FROM PYTHON SOURCE LINES 53-55

Run the pipeline
-----------------

.. GENERATED FROM PYTHON SOURCE LINES 55-60

.. code-block:: Python


    selected_features, p_values = my_pipeline2([x, y], sigma)
    print("Selected features: ", selected_features)
    print("P-values: ", p_values)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Selected features:  [3, 4]
    P-values:  [0.7979449236479258, 0.3691478607971712]




.. GENERATED FROM PYTHON SOURCE LINES 61-62

Plot the p-values

.. GENERATED FROM PYTHON SOURCE LINES 62-68

.. code-block:: Python

    plt.figure()
    plt.bar(range(len(p_values)), p_values)
    plt.xlabel("Feature index")
    plt.ylabel("P-value")
    plt.ylim((0, 1.0))
    plt.show()



.. image-sg:: /auto_examples/feature_selection/images/sphx_glr_SeqFS_001.png
   :alt: SeqFS
   :srcset: /auto_examples/feature_selection/images/sphx_glr_SeqFS_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.240 seconds)


.. _sphx_glr_download_auto_examples_feature_selection_SeqFS.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: SeqFS.ipynb <SeqFS.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: SeqFS.py <SeqFS.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: SeqFS.zip <SeqFS.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
